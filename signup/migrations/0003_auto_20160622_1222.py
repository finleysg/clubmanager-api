# -*- coding: utf-8 -*-
# Generated by Django 1.9.2 on 2016-06-22 17:22
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('courses', '0005_auto_20160207_1215'),
        ('core', '0006_auto_20160604_1625'),
        ('events', '0011_auto_20160622_1222'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('signup', '0002_auto_20160619_0924'),
    ]

    operations = [
        migrations.CreateModel(
            name='HistoricalRegistration',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('is_event_fee_paid', models.BooleanField(default=False, verbose_name='Event fee is paid')),
                ('is_greens_fee_paid', models.BooleanField(default=False, verbose_name='Greens fee is paid')),
                ('is_gross_skins_paid', models.BooleanField(default=False, verbose_name='Gross skins are paid')),
                ('is_net_skins_paid', models.BooleanField(default=False, verbose_name='Net skins are paid')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('member', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.Member')),
            ],
            options={
                'verbose_name': 'historical registration',
                'get_latest_by': 'history_date',
                'ordering': ('-history_date', '-history_id'),
            },
        ),
        migrations.CreateModel(
            name='HistoricalRegistrationGroup',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('starting_hole', models.IntegerField(blank=True, verbose_name='Starting hole')),
                ('starting_order', models.IntegerField(default=0, verbose_name='Starting order')),
                ('notes', models.TextField(blank=True, verbose_name='Registration notes')),
                ('payment_confirmation_code', models.CharField(blank=True, max_length=120, verbose_name='Payment confirmation code')),
                ('payment_confirmation_timestamp', models.DateTimeField(blank=True, verbose_name='Payment confirmation timestamp')),
                ('payment_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=5, verbose_name='Payment amount')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('course_setup', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='courses.CourseSetup')),
                ('event', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='events.Event')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('signed_up_by', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.Member')),
            ],
            options={
                'verbose_name': 'historical registration group',
                'get_latest_by': 'history_date',
                'ordering': ('-history_date', '-history_id'),
            },
        ),
        migrations.CreateModel(
            name='Registration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_event_fee_paid', models.BooleanField(default=False, verbose_name='Event fee is paid')),
                ('is_greens_fee_paid', models.BooleanField(default=False, verbose_name='Greens fee is paid')),
                ('is_gross_skins_paid', models.BooleanField(default=False, verbose_name='Gross skins are paid')),
                ('is_net_skins_paid', models.BooleanField(default=False, verbose_name='Net skins are paid')),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Member', verbose_name='Member')),
            ],
        ),
        migrations.CreateModel(
            name='RegistrationGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('starting_hole', models.IntegerField(blank=True, verbose_name='Starting hole')),
                ('starting_order', models.IntegerField(default=0, verbose_name='Starting order')),
                ('notes', models.TextField(blank=True, verbose_name='Registration notes')),
                ('payment_confirmation_code', models.CharField(blank=True, max_length=120, verbose_name='Payment confirmation code')),
                ('payment_confirmation_timestamp', models.DateTimeField(blank=True, verbose_name='Payment confirmation timestamp')),
                ('payment_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=5, verbose_name='Payment amount')),
                ('course_setup', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='courses.CourseSetup', verbose_name='Course')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.Event', verbose_name='Event')),
                ('signed_up_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Member', verbose_name='Signed up by')),
            ],
        ),
        migrations.RemoveField(
            model_name='signup',
            name='member',
        ),
        migrations.RemoveField(
            model_name='signup',
            name='signup_reservation',
        ),
        migrations.RemoveField(
            model_name='signupreservation',
            name='course_setup',
        ),
        migrations.RemoveField(
            model_name='signupreservation',
            name='event',
        ),
        migrations.RemoveField(
            model_name='historicalsignupslot',
            name='signup_reservation',
        ),
        migrations.RemoveField(
            model_name='signupslot',
            name='signup_reservation',
        ),
        migrations.AlterField(
            model_name='historicalsignupslot',
            name='expires',
            field=models.DateTimeField(blank=True, null=True, verbose_name='Expiration'),
        ),
        migrations.AlterField(
            model_name='historicalsignupslot',
            name='slot',
            field=models.IntegerField(verbose_name='Slot number'),
        ),
        migrations.AlterField(
            model_name='historicalsignupslot',
            name='starting_order',
            field=models.IntegerField(default=0, verbose_name='Starting order'),
        ),
        migrations.AlterField(
            model_name='historicalsignupslot',
            name='status',
            field=models.CharField(choices=[('A', 'Available'), ('P', 'Pending'), ('R', 'Reserved'), ('U', 'Unavailable')], default='A', max_length=1, verbose_name='Status'),
        ),
        migrations.AlterField(
            model_name='signupslot',
            name='course_setup_hole',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='courses.CourseSetupHole', verbose_name='Hole'),
        ),
        migrations.AlterField(
            model_name='signupslot',
            name='event',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.Event', verbose_name='Event'),
        ),
        migrations.AlterField(
            model_name='signupslot',
            name='expires',
            field=models.DateTimeField(blank=True, null=True, verbose_name='Expiration'),
        ),
        migrations.AlterField(
            model_name='signupslot',
            name='member',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.Member', verbose_name='Member'),
        ),
        migrations.AlterField(
            model_name='signupslot',
            name='slot',
            field=models.IntegerField(verbose_name='Slot number'),
        ),
        migrations.AlterField(
            model_name='signupslot',
            name='starting_order',
            field=models.IntegerField(default=0, verbose_name='Starting order'),
        ),
        migrations.AlterField(
            model_name='signupslot',
            name='status',
            field=models.CharField(choices=[('A', 'Available'), ('P', 'Pending'), ('R', 'Reserved'), ('U', 'Unavailable')], default='A', max_length=1, verbose_name='Status'),
        ),
        migrations.DeleteModel(
            name='Signup',
        ),
        migrations.DeleteModel(
            name='SignupReservation',
        ),
        migrations.AddField(
            model_name='registration',
            name='registration_group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='signup.RegistrationGroup', verbose_name='Group'),
        ),
        migrations.AddField(
            model_name='historicalregistration',
            name='registration_group',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='signup.RegistrationGroup'),
        ),
        migrations.AddField(
            model_name='historicalsignupslot',
            name='registration_group',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='signup.RegistrationGroup'),
        ),
        migrations.AddField(
            model_name='signupslot',
            name='registration_group',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='signup.RegistrationGroup', verbose_name='Group'),
        ),
    ]
